package ch.poiuqwer.saitek.fip4j.impl;

import com.sun.jna.Pointer;
import com.sun.jna.Structure;
import java.util.Arrays;
import java.util.List;

/**
 * Copyright 2015 Hermann Lehner
 * <p>
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 * <p>
 * http://www.apache.org/licenses/LICENSE-2.0
 * <p>
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 * <p>
 * This file was autogenerated by <a href="http://jnaerator.googlecode.com/">JNAerator</a>,<br>
 * a tool written by <a href="http://ochafik.com/">Olivier Chafik</a> that <a href="http://code.google.com/p/jnaerator/wiki/CreditsAndLicense">uses a few opensource projects.</a>.<br>
 * For help, please visit <a href="http://nativelibs4java.googlecode.com/">NativeLibs4Java</a> , <a href="http://rococoa.dev.java.net/">Rococoa</a>, or <a href="http://jna.dev.java.net/">JNA</a>.
 */
@SuppressWarnings("unused")
public class RequestStatus extends Structure {
    public int dwHeaderError;
    public int dwHeaderInfo;
    public int dwRequestError;
    public int dwRequestInfo;

    public RequestStatus() {
        super();
    }

    protected List<? > getFieldOrder() {
        return Arrays.asList("dwHeaderError", "dwHeaderInfo", "dwRequestError", "dwRequestInfo");
    }

    public RequestStatus(int dwHeaderError, int dwHeaderInfo, int dwRequestError, int dwRequestInfo) {
        super();
        this.dwHeaderError = dwHeaderError;
        this.dwHeaderInfo = dwHeaderInfo;
        this.dwRequestError = dwRequestError;
        this.dwRequestInfo = dwRequestInfo;
    }

    public RequestStatus(Pointer peer) {
        super(peer);
    }

    @SuppressWarnings("unused")
    public static class ByReference extends RequestStatus implements Structure.ByReference {

    }
    @SuppressWarnings("unused")
    public static class ByValue extends RequestStatus implements Structure.ByValue {

    }
}
